{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
  
      // Global Parameters
  
      // Is this a variable?
      "tags": {
        "type": "object",
        "defaultvalue": {
          "environment": "dev",
          "project": "Atenea"
        }
      },
  
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]"
      },
      "environment": {
        "type": "string",
        "allowedValues": ["dev", "uat", "pro"],
        "defaultValue": "dev"
      },
  
      // Storage Parameters
      "storageAccountConfig": {
        "type": "object",
        "metadata": {
          "description": "Storage Account configuration object."
        },
        "defaultvalue": {
          "deployStorageAccount": true,
          "storageName": "devstorageaccount001",
          "storageSKU": "Standard_LRS",
          "encryptionEnabled": true,
          "encryptInfra": false,
          "accessTier": "Hot",
          "dnsEndpointType": "Standard",
          "publicNetworkAccess": "Disabled",
          "minimumTlsVersion": "TLS1_2",
          "isHnsEnabled": true,
          "allowBlobPublicAccess": false
        }
      },
        "deployBlobContainers": {
          "type": "bool",
          "defaultValue": false
        },
        "blobContainers": {
          "type": "array",
          "defaultValue": ["raw-bronze-zone", "dq-silver-zone", "dq-rejected", "gold-mdm-zone", "marketplace", "log-adf-traces", "other-tennant"]
        }
      // End Storage Parameters
  
      },
    "functions": [],
    "variables": {
      "accountName": "[concat(parameters('environment'), parameters('storageAccountConfig').storageName)]"
    },
    "resources": [
    {
      "condition": "[parameters('storageAccountConfig').deployStorageAccount]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-04-01",
      "name": "[variables('accountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('storageAccountConfig').storageSKU]"
      },
      "kind": "StorageV2",
      "properties": {
        "accessTier": "[parameters('storageAccountConfig').accessTier]",
        "minimumTlsVersion": "[parameters('storageAccountConfig').minimumTlsVersion]",
        "supportsHttpsTrafficOnly": "[parameters('storageAccountConfig').encryptionEnabled]",
        "isHnsEnabled": "[parameters('storageAccountConfig').isHnsEnabled]",
        "allowBlobPublicAccess": "[parameters('storageAccountConfig').allowBlobPublicAccess]",
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "[parameters('storageAccountConfig').publicNetworkAccess]"
        },
        "encryption": {
          "requireInfrastructureEncryption": true,
          "services": {
            "file": { "keyType": "Account", "enabled": "[parameters('storageAccountConfig').encryptInfra]" },
            "blob": { "keyType": "Account", "enabled": "[parameters('storageAccountConfig').encryptInfra]" }
          },
          "keySource": "Microsoft.Storage"
        }
      }
    },
    // blobServices
    {
        "condition": "[parameters('deployBlobContainers')]",
        "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
        "apiVersion": "2021-04-01",
        "tags": "[parameters('tags')]",
        "name": "[concat(variables('accountName'), '/default/', parameters('blobContainers')[copyIndex('copyContainers')])]",
        "dependsOn": [
            "[resourceId('Microsoft.Storage/storageAccounts', variables('accountName'))]"
        ],
        "properties": {
            "publicAccess": "None"
        },
        "copy": {
            "name": "copyContainers",
            "count": "[length(parameters('blobContainers'))]"
        },
        "sku": {
            "name": "Standard_LRS",
            "tier": "Standard"
        }
    }
  ],
     "outputs": {
      "storageAccountId": {
        "type": "string",
        "value": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountConfig').storageName)]"
      }
    }
  }
  