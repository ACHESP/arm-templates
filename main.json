{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "tags": {
        "type": "object",
        "defaultvalue": {
          "environment": "dev",
          "project": "Atenea"
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]"
      },
      "environment": {
        "type": "string",
        "allowedValues": ["dev", "uat", "pro"]
      },
      
        // Storage Parameters
            "storageAccountConfig": {
                "type": "object",
                "metadata": {
                "description": "Storage Account configuration object."
                },
                "defaultvalue": {
                "deployStorageAccount": true,
                "storageName": "devstorageaccount001",
                "storageSKU": "Standard_LRS",
                "encryptionEnabled": true,
                "encryptInfra": false,
                "accessTier": "Hot",
                "dnsEndpointType": "Standard",
                "publicNetworkAccess": "Disabled",
                "minimumTlsVersion": "TLS1_2",
                "isHnsEnabled": true,
                "allowBlobPublicAccess": false
                }
            },
            "deployBlobContainers": {
                "type": "bool",
                "defaultValue": false
            },
            "blobContainers": {
                "type": "array",
                "defaultValue": ["raw-bronze-zone", "dq-silver-zone", "dq-rejected", "gold-mdm-zone", "marketplace", "log-adf-traces", "other-tennant"]
            },
            
            "StorageAccountRoleNameToAssign": {
                "type": "string",
                //"defaultValue": "Storage Blob Data Contributor",
                "defaultValue": "Storage Blob Data Contributor",
                "allowedValues": [
                    "Storage Account Backup Contributor",
                    "Storage Account Contributor",
                    "Storage Account Key Operator Service Role",
                    "Storage Blob Data Contributor", // This one is for the Data Factory
                    "Storage Blob Data Owner",
                    "Storage Blob Data Reader",
                    "Storage Blob Delegator",
                    "Storage File Data Privileged Contributor", // This one is for the Data Factory
                    "Storage File Data Privileged Reader",
                    "Storage File Data SMB Share Contributor",
                    "Storage File Data SMB Share Elevated Contributor",
                    "Storage File Data SMB Share Reader",
                    "Storage Queue Data Contributor",
                    "Storage Queue Data Message Processor", // Event Hub
                    "Storage Queue Data Message Sender",
                    "Storage Queue Data Reader",
                    "Storage Table Data Contributor", // This one should be necessary for some cases.
                    "Storage Table Data Reader"
                ],
                "metadata": {
                    "description": "Specifies the role the user will get with the secret in the vault. Valid values are: Key Vault Administrator, Key Vault Certificates Officer, Key Vault Crypto Officer, Key Vault Crypto Service Encryption User, Key Vault Crypto User, Key Vault Reader, Key Vault Secrets Officer, Key Vault Secrets User."
                }
            },
            
        // Key Vault parameters
            "keyVaultConfig": {
                "type": "object",
                "metadata": {
                "description": "Key Vault configuration object."
                }
            },
  
            "KeyVaultRoleNameToAssign": {
                "type": "string",
                "defaultValue": "Key Vault Secrets User",
                "allowedValues": [
                    "Key Vault Administrator",
                    "Key Vault Certificates Officer",
                    "Key Vault Crypto Officer",
                    "Key Vault Crypto Service Encryption User",
                    "Key Vault Crypto User",
                    "Key Vault Reader",
                    "Key Vault Secrets Officer",
                    "Key Vault Secrets User" // This one is for the Data Factory
                ],
                "metadata": {
                    "description": "Specifies the role the user will get with the secret in the vault. Valid values are: Key Vault Administrator, Key Vault Certificates Officer, Key Vault Crypto Officer, Key Vault Crypto Service Encryption User, Key Vault Crypto User, Key Vault Reader, Key Vault Secrets Officer, Key Vault Secrets User."
                }
            },
        
        // ADF Parameters
            "dataFactoryName": {
                "type": "string",
                "defaultValue": "AteneaDF",
                "metadata": {
                    "description": "Name for the Azure Data Factory."
                }
            },
            "dataFactoryPublicNetworkAccess": {
                "type": "bool",
                "defaultValue": true,
                "metadata": {
                    "description": "Enable or disable public network access"
                }
            },
            
            // Git Configuration
                "configureGit": {
                    "type": "bool",
                    "defaultValue": false,
                    "metadata": {
                        "description": "Configure git during deployment"
                }   
                },
                "gitRepoType": {
                    "type": "string",
                    "defaultValue": "FactoryVSTSConfiguration",
                    "metadata": {
                        "description": "Git repository type. Azure DevOps = FactoryVSTSConfiguration and GitHub = FactoryGitHubConfiguration"
                    },
                    "allowedValues": [
                        "FactoryVSTSConfiguration",
                        "FactoryGitHubConfiguration"
                    ]
                },
                "gitAccountName": {
                    "type": "string",
                    "metadata": {
                        "description": "Git account name. Azure DevOps = Organisation name and GitHub = Username"
                    }
                },
                "gitProjectName": {
                    "type": "string",
                    "metadata": {
                        "description": "Git project name. Only relevant for Azure DevOps"
                    }
                },
                "gitRepositoryName": {
                    "type": "string",
                    "metadata": {
                        "description": "Git repository name"
                    }
                },
                "gitCollaborationBranch": {
                    "type": "string",
                    "metadata": {
                        "description": "The collaboration branch name. Default is main"
                    }
                },
                "gitRootFolder": {
                    "type": "string",
                    "metadata": {
                        "description": "The root folder path name. Default is /"
                    }
                }
            // End Git Configuration Parameters
        // End ADF Parameters
    },
    "functions": [],
    "variables": {
        // Key Vault Variables
            "akvName": "[concat(parameters('environment'), '-', parameters('keyVaultConfig').keyVaultName)]",
            "akvRoleIdMapping": {
                "Key Vault Administrator": "00482a5a-887f-4fb3-b363-3b7fe8e74483",
                "Key Vault Certificates Officer": "a4417e6f-fecd-4de8-b567-7b0420556985",
                "Key Vault Crypto Officer": "14b46e9e-c2b7-41b4-b07b-48a6ebf60603",
                "Key Vault Crypto Service Encryption User": "e147488a-f6f5-4113-8e2d-b22465e65bf6",
                "Key Vault Crypto User": "12338af0-0e69-4776-bea7-57ae8d297424",
                "Key Vault Reader": "21090545-7ca7-4776-b22c-e363652d74d2",
                "Key Vault Secrets Officer": "b86a8fe4-44ce-4948-aee5-eccb2c155cd7",
                "Key Vault Secrets User": "4633458b-17de-408a-b874-0445c86b69e6"
            },
            "akvRoleAssignemnt": "[guid(variables('akvRoleIdMapping')[parameters('KeyVaultRoleNameToAssign')], resourceId('Microsoft.DataFactory/factories', variables('adfName')), resourceId('Microsoft.KeyVault/vaults', variables('akvName')))]",
        // End Key Vault Variables

        // Storage Account Variables
            "accountName": "[concat(parameters('environment'), parameters('storageAccountConfig').storageName)]",
            "storageRoleIdMapping": {
                "Storage Account Backup Contributor": "e5e2a7ff-d759-4cd2-bb51-3152d37e2eb1",
                "Storage Account Contributor": "17d1049b-9a84-46fb-8f53-869881c3d3ab",
                "Storage Account Key Operator Service Role": "81a9662b-bebf-436f-a333-f67b29880f12",
                "Storage Blob Data Contributor": "ba92f5b4-2d11-453d-a403-e96b0029c9fe",
                "Storage Blob Data Owner": "b7e6dc6d-f1e8-4753-8033-0f276bb0955b",
                "Storage Blob Data Reader":	"2a2b9908-6ea1-4ae2-8e65-a410df84e7d1",
                "Storage Blob Delegator": "db58b8e5-c6ad-4a2a-8342-4190687cbf4a",
                "Storage File Data Privileged Contributor": "69566ab7-960f-475b-8e7c-b3118f30c6bd",
                "Storage File Data Privileged Reader": "b8eda974-7b85-4f76-af95-65846b26df6d",
                "Storage File Data SMB Share Contributor": "0c867c2a-1d8c-454a-a3db-ab2ea1bdc8bb",
                "Storage File Data SMB Share Elevated Contributor": "a7264617-510b-434b-a828-9731dc254ea7",
                "Storage File Data SMB Share Reader": "aba4ae5f-2193-4029-9191-0cb91df5e314",
                "Storage Queue Data Contributor": "974c5e8b-45b9-4653-ba55-5f855dd0fb88",
                "Storage Queue Data Message Processor":	"8a0f0c08-91a1-4084-bc3d-661d67233fed",
                "Storage Queue Data Message Sender": "c6a89b2d-59bc-44d0-9896-0f6e12d7b80a",
                "Storage Queue Data Reader":	"19e7f393-937e-4f77-808e-94535e297925",
                "Storage Table Data Contributor": "0a9a7e1f-b9d0-4cc4-a60d-0319b160aaa3",
                "Storage Table Data Reader": "76199698-9eea-4c19-bc75-cec21354c6b6"
            },
            "storageRoleAssignemnt": "[guid(variables('storageRoleIdMapping')[parameters('StorageAccountRoleNameToAssign')], resourceId('Microsoft.DataFactory/factories', variables('adfName')), resourceId('Microsoft.Storage/storageAccounts', variables('accountName')))]", // the unique guid is generated using the role, the object principal and finally the scope.
        // End Storage Account Variables
        
        // Data Factory Variables
            //"managedVnetName": "default",
            "repoConfiguration": "[if(equals(parameters('gitRepoType'), 'FactoryVSTSConfiguration'), createObject('accountName', parameters('gitAccountName'), 'collaborationBranch', parameters('gitCollaborationBranch'), 'repositoryName', parameters('gitRepositoryName'), 'rootFolder', parameters('gitRootFolder'), 'type', 'FactoryVSTSConfiguration', 'projectName', parameters('gitProjectName')), createObject('accountName', parameters('gitAccountName'), 'collaborationBranch', parameters('gitCollaborationBranch'), 'repositoryName', parameters('gitRepositoryName'), 'rootFolder', parameters('gitRootFolder'), 'type', 'FactoryGitHubConfiguration'))]",
            //"diagnosticsName": "[format('{0}-dgs', variables('adfName'))]",
            "adfName": "[concat(parameters('environment'), '-', parameters('dataFactoryName'))]"
        // End Data Factory Variables
    },
    "resources": [
        {
            "condition": "[parameters('storageAccountConfig').deployStorageAccount]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-04-01",
            "name": "[variables('accountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('storageAccountConfig').storageSKU]"
            },
            "kind": "StorageV2",
            "properties": {
                "dnsEndpointType": "[parameters('storageAccountConfig').dnsEndpointType]",
                "accessTier": "[parameters('storageAccountConfig').accessTier]",
                
                "allowedCopyScope": "AAD",
                "defaultToOAuthAuthentication": true,
                "allowCrossTenantReplication": false,
                
                "allowBlobPublicAccess": "[parameters('storageAccountConfig').allowBlobPublicAccess]",
                "pulicNetworkAcces": "[parameters('storageAccountConfig').publicNetworkAccess]",
                
                "minimumTlsVersion": "[parameters('storageAccountConfig').minimumTlsVersion]",
                "supportsHttpsTrafficOnly": "[parameters('storageAccountConfig').encryptionEnabled]",
                "isHnsEnabled": "[parameters('storageAccountConfig').isHnsEnabled]",
                "isSftpEnabled": "[parameters('storageAccountConfig').isSftpEnabled]",
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Deny"
                },                
                "encryption": {
                    "requireInfrastructureEncryption": true,
                    "services": {
                        "file": { "keyType": "Account", "enabled": "[parameters('storageAccountConfig').encryptInfra]" },
                        "blob": { "keyType": "Account", "enabled": "[parameters('storageAccountConfig').encryptInfra]" }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },
        
        {
            "condition": "[parameters('deployBlobContainers')]",
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2021-04-01",
            "tags": "[parameters('tags')]",
            "name": "[concat(variables('accountName'), '/default/', parameters('blobContainers')[copyIndex('copyContainers')])]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('accountName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            },
            "copy": {
                "name": "copyContainers",
                "count": "[length(parameters('blobContainers'))]"
            },
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            }
        },
        {
            "condition": "[parameters('keyVaultConfig').deployKeyVault]",
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2021-10-01",
            "name": "[variables('akvName')]",
            "location": "[parameters('location')]",
            "tags": "[parameters('tags')]",
            "properties": {
            "sku": {
                "family": "A",
                "name": "[parameters('keyVaultConfig').KeyVaultSkuName]"
            },
            "enabledForDeployment": "[parameters('keyVaultConfig').enabledForDeployment]",
            "enabledForDiskEncryption": "[parameters('keyVaultConfig').enabledForDiskEncryption]",
            "enabledForTemplateDeployment": "[parameters('keyVaultConfig').enabledForTemplateDeployment]",
            "publicNetworkAccess": "[parameters('keyVaultConfig').keyVaultPublicNetworkAccess]",
            "softDeleteRetentionInDays": "[parameters('keyVaultConfig').softDeleteRetentionInDays]",
            "enableRbacAuthorization": "[parameters('keyVaultConfig').enableRbacAuthorization]",
            "tenantId": "[subscription().tenantId]",
            "networkAcls": {
                "defaultAction": "Allow", // Deny
                "bypass": "AzureServices"
            }
            },
            "dependsOn": []
        },

        {
            "type": "Microsoft.DataFactory/factories",
            "apiVersion": "2018-06-01",
            "name": "[variables('adfName')]",
            "location": "[parameters('location')]",
            "tags": "[parameters('tags')]",
            "identity": {
                "type": "SystemAssigned"
            },
            // "identity": "[createObject('type', 'systemAssigned')]",
            "properties": {
                "repoConfiguration": "[if(parameters('configureGit'), variables('repoConfiguration'), null())]",
                "publicNetworkAccess": "[if(bool(parameters('dataFactoryPublicNetworkAccess')), 'Enabled', 'Disabled')]"
            }
        }

    ],
    "outputs": {
        "DataFactoryId": {
            "type": "string",
            "value": "[resourceId('Microsoft.DataFactory/factories', variables('adfName'))]"
        }
    }
}